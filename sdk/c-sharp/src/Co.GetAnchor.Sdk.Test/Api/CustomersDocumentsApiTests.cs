/* 
 * Anchor API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Co.GetAnchor.Sdk.Client;
using Co.GetAnchor.Sdk.Api;

namespace Co.GetAnchor.Sdk.Test
{
    /// <summary>
    ///  Class for testing CustomersDocumentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CustomersDocumentsApiTests
    {
        private CustomersDocumentsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomersDocumentsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomersDocumentsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomersDocumentsApi
            //Assert.IsInstanceOfType(typeof(CustomersDocumentsApi), instance, "instance is a CustomersDocumentsApi");
        }

        /// <summary>
        /// Test ApiV1DocumentsCustomerIdDocumentIdGet
        /// </summary>
        [Test]
        public void ApiV1DocumentsCustomerIdDocumentIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerId = null;
            //string documentId = null;
            //var response = instance.ApiV1DocumentsCustomerIdDocumentIdGet(customerId, documentId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test ApiV1DocumentsCustomerIdGet
        /// </summary>
        [Test]
        public void ApiV1DocumentsCustomerIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerId = null;
            //var response = instance.ApiV1DocumentsCustomerIdGet(customerId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test ApiV1DocumentsDownloadDocumentCustomerIdDocumentIdGet
        /// </summary>
        [Test]
        public void ApiV1DocumentsDownloadDocumentCustomerIdDocumentIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerId = null;
            //string documentId = null;
            //var response = instance.ApiV1DocumentsDownloadDocumentCustomerIdDocumentIdGet(customerId, documentId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test ApiV1DocumentsUploadDocumentCustomerIdDocumentIdPost
        /// </summary>
        [Test]
        public void ApiV1DocumentsUploadDocumentCustomerIdDocumentIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerId = null;
            //string documentId = null;
            //byte[] fileData = null;
            //string textData = null;
            //instance.ApiV1DocumentsUploadDocumentCustomerIdDocumentIdPost(customerId, documentId, fileData, textData);
            
        }
    }

}
